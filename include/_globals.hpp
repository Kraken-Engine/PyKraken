#pragma once

#include <SDL3/SDL.h>
#include <unordered_map>

enum class knMouseButton : uint8_t
{
    M_LEFT = SDL_BUTTON_LEFT,
    M_MIDDLE = SDL_BUTTON_MIDDLE,
    M_RIGHT = SDL_BUTTON_RIGHT,
    M_SIDE1 = SDL_BUTTON_X1,
    M_SIDE2 = SDL_BUTTON_X2,
};

enum class Anchor
{
    TOP_LEFT,
    TOP_MID,
    TOP_RIGHT,
    MID_LEFT,
    CENTER,
    MID_RIGHT,
    BOTTOM_LEFT,
    BOTTOM_MID,
    BOTTOM_RIGHT,
};

enum class KnKeycode : SDL_Keycode
{
    K_BACKSPACE = SDLK_BACKSPACE,
    K_TAB = SDLK_TAB,
    K_RETURN = SDLK_RETURN,
    K_ESC = SDLK_ESCAPE,
    K_SPACE = SDLK_SPACE,
    K_EXCLAIM = SDLK_EXCLAIM,
    K_DBLQUOTE = SDLK_DBLAPOSTROPHE,
    K_HASH = SDLK_HASH,
    K_DOLLAR = SDLK_DOLLAR,
    K_PERCENT = SDLK_PERCENT,
    K_AMPERSAND = SDLK_AMPERSAND,
    K_SGLQUOTE = SDLK_APOSTROPHE,
    K_ASTERISK = SDLK_ASTERISK,
    K_PLUS = SDLK_PLUS,
    K_COMMA = SDLK_COMMA,
    K_MINUS = SDLK_MINUS,
    K_PERIOD = SDLK_PERIOD,
    K_SLASH = SDLK_SLASH,
    K_0 = SDLK_0,
    K_1 = SDLK_1,
    K_2 = SDLK_2,
    K_3 = SDLK_3,
    K_4 = SDLK_4,
    K_5 = SDLK_5,
    K_6 = SDLK_6,
    K_7 = SDLK_7,
    K_8 = SDLK_8,
    K_9 = SDLK_9,
    K_COLON = SDLK_COLON,
    K_SEMICOLON = SDLK_SEMICOLON,
    K_LT = SDLK_LESS,
    K_EQ = SDLK_EQUALS,
    K_GT = SDLK_GREATER,
    K_QUESTION = SDLK_QUESTION,
    K_AT = SDLK_AT,
    K_LBRACKET = SDLK_LEFTBRACKET,
    K_BACKSLASH = SDLK_BACKSLASH,
    K_RBRACKET = SDLK_RIGHTBRACKET,
    K_CARET = SDLK_CARET,
    K_UNDERSCORE = SDLK_UNDERSCORE,
    K_GRAVE = SDLK_GRAVE,
    K_a = SDLK_A,
    K_b = SDLK_B,
    K_c = SDLK_C,
    K_d = SDLK_D,
    K_e = SDLK_E,
    K_f = SDLK_F,
    K_g = SDLK_G,
    K_h = SDLK_H,
    K_i = SDLK_I,
    K_j = SDLK_J,
    K_k = SDLK_K,
    K_l = SDLK_L,
    K_m = SDLK_M,
    K_n = SDLK_N,
    K_o = SDLK_O,
    K_p = SDLK_P,
    K_q = SDLK_Q,
    K_r = SDLK_R,
    K_s = SDLK_S,
    K_t = SDLK_T,
    K_u = SDLK_U,
    K_v = SDLK_V,
    K_w = SDLK_W,
    K_x = SDLK_X,
    K_y = SDLK_Y,
    K_z = SDLK_Z,
    K_LBRACE = SDLK_LEFTBRACE,
    K_PIPE = SDLK_PIPE,
    K_RBRACE = SDLK_RIGHTBRACE,
    K_TILDE = SDLK_TILDE,
    K_DEL = SDLK_DELETE,
    K_CAPS = SDLK_CAPSLOCK,
    K_F1 = SDLK_F1,
    K_F2 = SDLK_F2,
    K_F3 = SDLK_F3,
    K_F4 = SDLK_F4,
    K_F5 = SDLK_F5,
    K_F6 = SDLK_F6,
    K_F7 = SDLK_F7,
    K_F8 = SDLK_F8,
    K_F9 = SDLK_F9,
    K_F10 = SDLK_F10,
    K_F11 = SDLK_F11,
    K_F12 = SDLK_F12,
    K_PRTSCR = SDLK_PRINTSCREEN,
    K_SCRLK = SDLK_SCROLLLOCK,
    K_PAUSE = SDLK_PAUSE,
    K_INS = SDLK_INSERT,
    K_HOME = SDLK_HOME,
    K_PGUP = SDLK_PAGEUP,
    K_END = SDLK_END,
    K_PGDOWN = SDLK_PAGEDOWN,
    K_RIGHT = SDLK_RIGHT,
    K_LEFT = SDLK_LEFT,
    K_DOWN = SDLK_DOWN,
    K_UP = SDLK_UP,
    K_NUMLOCK = SDLK_NUMLOCKCLEAR,
    K_KP_DIV = SDLK_KP_DIVIDE,
    K_KP_MULT = SDLK_KP_MULTIPLY,
    K_KP_MINUS = SDLK_KP_MINUS,
    K_KP_PLUS = SDLK_KP_PLUS,
    K_KP_ENTER = SDLK_KP_ENTER,
    K_KP_1 = SDLK_KP_1,
    K_KP_2 = SDLK_KP_2,
    K_KP_3 = SDLK_KP_3,
    K_KP_4 = SDLK_KP_4,
    K_KP_5 = SDLK_KP_5,
    K_KP_6 = SDLK_KP_6,
    K_KP_7 = SDLK_KP_7,
    K_KP_8 = SDLK_KP_8,
    K_KP_9 = SDLK_KP_9,
    K_KP_0 = SDLK_KP_0,
    K_KP_PERIOD = SDLK_KP_PERIOD,
    K_AGAIN = SDLK_AGAIN,
    K_UNDO = SDLK_UNDO,
    K_CUT = SDLK_CUT,
    K_COPY = SDLK_COPY,
    K_PASTE = SDLK_PASTE,
    K_FIND = SDLK_FIND,
    K_MUTE = SDLK_MUTE,
    K_VOLUP = SDLK_VOLUMEUP,
    K_VOLDOWN = SDLK_VOLUMEDOWN,
    K_LPAREN = SDLK_LEFTPAREN,
    K_RPAREN = SDLK_RIGHTPAREN,
    K_LCTRL = SDLK_LCTRL,
    K_LSHIFT = SDLK_LSHIFT,
    K_LALT = SDLK_LALT,
    K_LGUI = SDLK_LGUI,
    K_RCTRL = SDLK_RCTRL,
    K_RSHIFT = SDLK_RSHIFT,
    K_RALT = SDLK_RALT,
    K_RGUI = SDLK_RGUI,
};
