name: Build Wheels

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch: # Allows manual triggering of the workflow

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    env:
      MACOSX_DEPLOYMENT_TARGET: "14.0"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5

      # ------------------ Linux ------------------
      - name: Install build and SDL dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git cmake build-essential ninja-build \
            libasound2-dev libpulse-dev libaudio-dev libjack-dev libsndio-dev \
            libx11-dev libxext-dev libxrandr-dev libxinerama-dev libxcursor-dev \
            libxi-dev libwayland-dev libxkbcommon-dev libgl1-mesa-dev

      - name: Build and install SDL3 from source (Linux)
        if: runner.os == 'Linux'
        run: |
          git clone --depth 1 --branch release-3.2.18 https://github.com/libsdl-org/SDL.git
          cd SDL
          cmake . -B build -DSDL_TESTS=OFF
          cmake --build build
          sudo cmake --install build
          cd ..

      - name: Build and install SDL3_image from source (Linux)
        if: runner.os == 'Linux'
        run: |
          git clone --depth 1 --branch release-3.2.4 https://github.com/libsdl-org/SDL_image.git
          cd SDL_image
          cmake . -B build
          cmake --build build
          sudo cmake --install build
          cd ..

      # ------------------ MacOS ------------------
      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install sdl3 sdl3_image

      # ------------------ Windows ------------------
      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $SDL_VERSION = "3.2.18" # Use the appropriate version
          $SDL_IMAGE_VERSION = "3.2.4" # Use the appropriate version

          # Download and extract SDL3
          Invoke-WebRequest -Uri "https://github.com/libsdl-org/SDL/releases/download/release-$SDL_VERSION/SDL3-devel-$SDL_VERSION-VC.zip" -OutFile "sdl3.zip"
          Expand-Archive -Path "sdl3.zip" -DestinationPath "sdl3_temp"
          $SDL3_PATH = (Get-ChildItem -Path "sdl3_temp/SDL3-*" | Select-Object -First 1).FullName
          echo "SDL3_DIR=$SDL3_PATH/cmake" | Out-File -FilePath $env:GITHUB_ENV -Append
          Copy-Item "$SDL3_PATH/lib/x64/SDL3.dll" -Destination "src/pykraken/"

          # Download and extract SDL3_image
          Invoke-WebRequest -Uri "https://github.com/libsdl-org/SDL_image/releases/download/release-$SDL_IMAGE_VERSION/SDL3_image-devel-$SDL_IMAGE_VERSION-VC.zip" -OutFile "sdl3_image.zip"
          Expand-Archive -Path "sdl3_image.zip" -DestinationPath "sdl3_image_temp"
          $SDL_IMAGE_PATH = (Get-ChildItem -Path "sdl3_image_temp/SDL3_image-*" | Select-Object -First 1).FullName
          echo "SDL3_image_DIR=$SDL_IMAGE_PATH/cmake" | Out-File -FilePath $env:GITHUB_ENV -Append
          Copy-Item "$SDL_IMAGE_PATH/lib/x64/SDL3_image.dll" -Destination "src/pykraken/"

          # Add SDL3 bin to PATH for CMake find_package to work correctly
          echo "$SDL3_PATH/lib/x64" | Out-File -FilePath $env:GITHUB_PATH -Append

      # ------------------ Build Wheels ------------------
      - name: Install build tools
        run: python -m pip install cibuildwheel

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp31[0-3]-*" # Build for Python 3.10-3.13

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl
