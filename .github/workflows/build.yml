name: Build Wheels

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest, macos-15, ubuntu-latest ]

    env:
      MACOSX_DEPLOYMENT_TARGET: '15.0'

    steps:
      - uses: actions/checkout@v4

      - name: Install Ninja
        run: pip install ninja

      - name: Install UV
        uses: astral-sh/setup-uv@v6
        with:
          version: 'latest'

      - name: Build Wheels
        uses: pypa/cibuildwheel@v3.0.1
        env:
          CIBW_BUILD_FRONTEND: 'build[uv]'
          CIBW_SKIP: '*-musllinux_*'
          CIBW_BUILD_VERBOSITY: 1
          CMAKE_ARGS: >
            -GNinja
            -DCMAKE_POSITION_INDEPENDENT_CODE=ON
            -DCMAKE_C_FLAGS=-fPIC
            -DCMAKE_CXX_FLAGS=-fPIC
          CMAKE_BUILD_PARALLEL_LEVEL: 4
          CIBW_BEFORE_ALL_LINUX: >
            yum -y install
            alsa-lib-devel pulseaudio-libs-devel nas-devel pipewire-devel
            libX11-devel libXext-devel libXrandr-devel libXcursor-devel libXfixes-devel
            libXi-devel libXScrnSaver-devel
            libxkbcommon-devel wayland-devel mesa-libGL-devel mesa-libEGL-devel
            || true

      - name: Upload Wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl
          compression-level: 0
